import { Memory } from './Memory';
import { CPU } from './CPU';
import { zero, b, b2s } from './helpers';
import { inc16 } from './inc16';
import { RAM16K } from './RAM16K';
import { Binary, Binary15, Binary16, Word } from './types';

const samples = {
  rect: [
    '0000 0000 0000 0000',
    '1111 1100 0001 0000',
    '0000 0000 0001 0111',
    '1110 0011 0000 0110',
    '0000 0000 0001 0000',
    '1110 0011 0000 1000',
    '0100 0000 0000 0000',
    '1110 1100 0001 0000',
    '0000 0000 0001 0001',
    '1110 0011 0000 1000',
    '0000 0000 0001 0001',
    '1111 1100 0010 0000',
    '1110 1110 1000 1000',
    '0000 0000 0001 0001',
    '1111 1100 0001 0000',
    '0000 0000 0010 0000',
    '1110 0000 1001 0000',
    '0000 0000 0001 0001',
    '1110 0011 0000 1000',
    '0000 0000 0001 0000',
    '1111 1100 1001 1000',
    '0000 0000 0000 1010',
    '1110 0011 0000 0001',
    '0000 0000 0001 0111',
    '1110 1010 1000 0111',
  ],
  max: [
    '0000 0000 0000 0000',
    '1111 1100 0001 0000',
    '0000 0000 0000 0001',
    '1111 0100 1101 0000',
    '0000 0000 0000 1010',
    '1110 0011 0000 0001',
    '0000 0000 0000 0001',
    '1111 1100 0001 0000',
    '0000 0000 0000 1100',
    '1110 1010 1000 0111',
    '0000 0000 0000 0000',
    '1111 1100 0001 0000',
    '0000 0000 0000 0010',
    '1110 0011 0000 1000',
    '0000 0000 0000 1110',
    '1110 1010 1000 0111',
  ],
  add: [
    '0000 0000 0000 0010',
    '1110 1100 0001 0000',
    '0000 0000 0000 0011',
    '1110 0000 1001 0000',
    '0000 0000 0000 0000',
    '1110 0011 0000 1000',
  ],
};

describe('Screen and CPU', function () {
  it('check', function () {
    const memory = new Memory();
    const cpu = new CPU(memory);

    // add
    // for (const command of samples.add) {
    //   let res = cpu.write(zero(), b(command), 0);
    //   memory.write(res[0], res[1], res[2]);
    // }
    // memory.read();

    // max
    memory.write(b('0000 0000 0000 1011'), 1, b('000 0000 0000 0000'));
    memory.write(b('0000 0000 0000 1001'), 1, b('000 0000 0000 0001'));
    for (const command of samples.max) {
      let res = cpu.write(zero(), b(command), 0);
      memory.write(res[0], res[1], res[2]);
    }
    console.log(b2s(memory.read(b('000 0000 0000 0000'))));
    console.log(b2s(memory.read(b('000 0000 0000 0001'))));
    console.log(b2s(memory.read(b('000 0000 0000 0010'))));
  });
});
