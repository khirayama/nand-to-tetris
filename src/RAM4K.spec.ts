import assert from 'power-assert';
import { RAM4K } from './RAM4K';

describe('RAM4K', function () {
  it('should return correct Binary', function () {
    const ram4K = new RAM4K();

    assert.deepEqual(
      ram4K.write([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    );
    assert.deepEqual(
      ram4K.write([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 1, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    );
    assert.deepEqual(
      ram4K.write([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    );
    assert.deepEqual(
      ram4K.write([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 1, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]),
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    );
    assert.deepEqual(
      ram4K.write([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    );
    assert.deepEqual(
      ram4K.write([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]),
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    );
  });
});
